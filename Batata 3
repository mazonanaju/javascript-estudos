
projeto-analise-codigos/
index.html
css/
style.css
js/
codigo1.js
codigo2.js
codigo3.js
analise.js

1. index.html
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Análise de Códigos - Maior, Menor e Média</title>
    <link rel="stylesheet" href="css/style.css">
</head>
<body>
    <div class="container">
        <header>
            <h1>Análise de Códigos JavaScript</h1>
            <p>Identificando o maior, menor e a média entre três códigos diferentes</p>
        </header>

        <div class="codes-container">
            <div class="code-section">
                <h2>Código 1: Abordagem Direta</h2>
                <div class="code-content">
                    <pre><code>// Código para calcular maior, menor e média
function calcular() {
    const num1 = parseFloat(document.getElementById('numero1').value);
    const num2 = parseFloat(document.getElementById('numero2').value);
    const num3 = parseFloat(document.getElementById('numero3').value);

    if (isNaN(num1) || isNaN(num2) || isNaN(num3)) {
        alert("Por favor, preencha todos os campos com números válidos.");
        return;
    }

    const maior = Math.max(num1, num2, num3);
    const menor = Math.min(num1, num2, num3);
    const media = (num1 + num2 + num3) / 3;

    document.getElementById('maior').textContent = maior;
    document.getElementById('menor').textContent = menor;
    document.getElementById('media').textContent = media.toFixed(2);
}</code></pre>
                </div>
                <div class="code-info">
                    <p><strong>Localização:</strong> <code>js/codigo1.js</code></p>
                    <p><strong>Linhas:</strong> <span id="linhas-codigo1">14</span></p>
                    <p><strong>Caracteres:</strong> <span id="caracteres-codigo1">542</span></p>
                </div>
            </div>

            <div class="code-section">
                <h2>Código 2: Abordagem com Array</h2>
                <div class="code-content">
                    <pre><code>// Função de validação e cálculo com array
function analisarNumeros() {
    let valores = [];
    valores.push(parseFloat(document.getElementById('num1').value));
    valores.push(parseFloat(document.getElementById('num2').value));
    valores.push(parseFloat(document.getElementById('num3').value));

    if (valores.some(isNaN)) {
        alert('Por favor, insira números válidos');
        return;
    }

    valores.sort((a, b) => a - b);
    const menor = valores[0];
    const maior = valores[valores.length - 1];
    const media = valores.reduce((a, b) => a + b, 0) / valores.length;

    document.getElementById('maior').textContent = maior;
    document.getElementById('menor').textContent = menor;
    document.getElementById('media').textContent = media.toFixed(2);
}</code></pre>
                </div>
                <div class="code-info">
                    <p><strong>Localização:</strong> <code>js/codigo2.js</code></p>
                    <p><strong>Linhas:</strong> <span id="linhas-codigo2">16</span></p>
                    <p><strong>Caracteres:</strong> <span id="caracteres-codigo2">598</span></p>
                </div>
            </div>

            <div class="code-section">
                <h2>Código 3: Abordagem com Loop</h2>
                <div class="code-content">
                    <pre><code>// Abordagem alternativa com loop
function calcularResultados() {
    const inputs = document.querySelectorAll('.numero-input');
    let numeros = [];
    let soma = 0;

    for (let i = 0; i < inputs.length; i++) {
        const valor = parseFloat(inputs[i].value);
        if (!isNaN(valor)) {
            numeros.push(valor);
            soma += valor;
        }
    }

    if (numeros.length === 0) {
        alert('Nenhum número válido foi inserido');
        return;
    }

    const maior = Math.max(...numeros);
    const menor = Math.min(...numeros);
    const media = soma / numeros.length;

    document.getElementById('maior').textContent = maior;
    document.getElementById('menor').textContent = menor;
    document.getElementById('media').textContent = media.toFixed(2);
}</code></pre>
                </div>
                <div class="code-info">
                    <p><strong>Localização:</strong> <code>js/codigo3.js</code></p>
                    <p><strong>Linhas:</strong> <span id="linhas-codigo3">22</span></p>
                    <p><strong>Caracteres:</strong> <span id="caracteres-codigo3">643</span></p>
                </div>
            </div>
        </div>

        <div class="analysis-section">
            <h2>Resultados da Análise</h2>
            
            <div class="analysis-results">
                <div class="result-item">
                    <h3>Maior Código</h3>
                    <p id="maior-codigo">Código 3 (22 linhas)</p>
                </div>
                <div class="result-item">
                    <h3>Menor Código</h3>
                    <p id="menor-codigo">Código 1 (14 linhas)</p>
                </div>
                <div class="result-item">
                    <h3>Média</h3>
                    <p id="media-codigos">17.33 linhas</p>
                </div>
            </div>

            <button id="btn-analisar" class="analyze-btn">Analisar Códigos</button>
        </div>

        <footer>
            <p>Programação de Aplicativos - Avaliação I</p>
        </footer>
    </div>

    <script src="js/analise.js"></script>
</body>
</html>


2. css/style.css

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

body {
    background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
    min-height: 100vh;
    padding: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.container {
    background-color: rgba(255, 255, 255, 0.95);
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    width: 100%;
    max-width: 1200px;
    padding: 30px;
    margin: 20px;
}

header {
    text-align: center;
    margin-bottom: 30px;
}

header h1 {
    color: #1a2a6c;
    margin-bottom: 10px;
    font-size: 2.5rem;
}

header p {
    color: #444;
    font-size: 1.1rem;
}

.codes-container {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    margin-bottom: 30px;
}

.code-section {
    flex: 1;
    min-width: 300px;
    background: linear-gradient(to bottom, #f5f5f5, #e0e0e0);
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.code-section h2 {
    color: #1a2a6c;
    margin-bottom: 15px;
    font-size: 1.5rem;
    border-bottom: 2px solid #1a2a6c;
    padding-bottom: 10px;
}

.code-content {
    background-color: #2c3e50;
    color: #ecf0f1;
    padding: 15px;
    border-radius: 5px;
    overflow-x: auto;
    margin-bottom: 15px;
}

.code-content pre {
    margin: 0;
    white-space: pre-wrap;
}

.code-content code {
    font-family: 'Courier New', monospace;
    font-size: 0.9rem;
    line-height: 1.4;
}

.code-info {
    background-color: white;
    padding: 10px;
    border-radius: 5px;
    font-size: 0.9rem;
}

.code-info p {
    margin: 5px 0;
}

.analysis-section {
    background-color: #f8f9fa;
    border-radius: 10px;
    padding: 25px;
    border-left: 5px solid #1a2a6c;
    text-align: center;
}

.analysis-section h2 {
    color: #1a2a6c;
    margin-bottom: 20px;
    font-size: 1.8rem;
}

.analysis-results {
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
    gap: 20px;
    margin-bottom: 30px;
}

.result-item {
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    text-align: center;
    flex: 1;
    min-width: 200px;
}

.result-item h3 {
    color: #2c3e50;
    margin-bottom: 10px;
    font-size: 1.2rem;
}

.result-item p {
    font-size: 1.3rem;
    font-weight: bold;
    color: #1a2a6c;
}

.analyze-btn {
    background: linear-gradient(to right, #4CAF50, #2E8B57);
    color: white;
    border: none;
    padding: 14px 20px;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: transform 0.2s, box-shadow 0.2s;
}

.analyze-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.analyze-btn:active {
    transform: translateY(0);
}

footer {
    margin-top: 30px;
    text-align: center;
    color: #666;
    font-size: 0.9rem;
    padding-top: 20px;
    border-top: 1px solid #ddd;
}

@media (max-width: 768px) {
    .codes-container {
        flex-direction: column;
    }
    
    .analysis-results {
        flex-direction: column;
    }
    
    header h1 {
        font-size: 2rem;
    }
}

3. js/codigo1.js

// Código 1: Abordagem Direta
// Localização: js/codigo1.js

function calcular() {
    const num1 = parseFloat(document.getElementById('numero1').value);
    const num2 = parseFloat(document.getElementById('numero2').value);
    const num3 = parseFloat(document.getElementById('numero3').value);

    if (isNaN(num1) || isNaN(num2) || isNaN(num3)) {
        alert("Por favor, preencha todos os campos com números válidos.");
        return;
    }

    const maior = Math.max(num1, num2, num3);
    const menor = Math.min(num1, num2, num3);
    const media = (num1 + num2 + num3) / 3;

    document.getElementById('maior').textContent = maior;
    document.getElementById('menor').textContent = menor;
    document.getElementById('media').textContent = media.toFixed(2);
}

4. js/codigo2.js

// Código 2: Abordagem com Array
// Localização: js/codigo2.js

function analisarNumeros() {
    let valores = [];
    valores.push(parseFloat(document.getElementById('num1').value));
    valores.push(parseFloat(document.getElementById('num2').value));
    valores.push(parseFloat(document.getElementById('num3').value));

    if (valores.some(isNaN)) {
        alert('Por favor, insira números válidos');
        return;
    }

    valores.sort((a, b) => a - b);
    const menor = valores[0];
    const maior = valores[valores.length - 1];
    const media = valores.reduce((a, b) => a + b, 0) / valores.length;

    document.getElementById('maior').textContent = maior;
    document.getElementById('menor').textContent = menor;
    document.getElementById('media').textContent = media.toFixed(2);
}

5. js/codigo3.js

// Código 3: Abordagem com Loop
// Localização: js/codigo3.js

function calcularResultados() {
    const inputs = document.querySelectorAll('.numero-input');
    let numeros = [];
    let soma = 0;

    for (let i = 0; i < inputs.length; i++) {
        const valor = parseFloat(inputs[i].value);
        if (!isNaN(valor)) {
            numeros.push(valor);
            soma += valor;
        }
    }

    if (numeros.length === 0) {
        alert('Nenhum número válido foi inserido');
        return;
    }

    const maior = Math.max(...numeros);
    const menor = Math.min(...numeros);
    const media = soma / numeros.length;

    document.getElementById('maior').textContent = maior;
    document.getElementById('menor').textContent = menor;
    document.getElementById('media').textContent = media.toFixed(2);
}

6. js/analise.js

// Script de análise dos códigos
// Localização: js/analise.js

document.addEventListener('DOMContentLoaded', function() {
    // Dados dos códigos (linhas e caracteres)
    const codigos = [
        { id: 1, nome: "Código 1", linhas: 14, caracteres: 542, arquivo: "js/codigo1.js" },
        { id: 2, nome: "Código 2", linhas: 16, caracteres: 598, arquivo: "js/codigo2.js" },
        { id: 3, nome: "Código 3", linhas: 22, caracteres: 643, arquivo: "js/codigo3.js" }
    ];

    // Botão de análise
    const btnAnalisar = document.getElementById('btn-analisar');
    
    btnAnalisar.addEventListener('click', function() {
        analisarCodigos(codigos);
    });

    // Função para analisar os códigos
    function analisarCodigos(codigos) {
        // Encontrar o código com mais linhas
        const maiorCodigo = codigos.reduce((max, codigo) => 
            codigo.linhas > max.linhas ? codigo : max, codigos[0]);
        
        // Encontrar o código com menos linhas
        const menorCodigo = codigos.reduce((min, codigo) => 
            codigo.linhas < min.linhas ? codigo : min, codigos[0]);
        
        // Calcular a média de linhas
        const mediaLinhas = (codigos[0].linhas + codigos[1].linhas + codigos[2].linhas) / 3;
        
        // Atualizar a interface com os resultados
        document.getElementById('maior-codigo').textContent = 
            `${maiorCodigo.nome} (${maiorCodigo.linhas} linhas) - ${maiorCodigo.arquivo}`;
        
        document.getElementById('menor-codigo').textContent = 
            `${menorCodigo.nome} (${menorCodigo.linhas} linhas) - ${menorCodigo.arquivo}`;
        
        document.getElementById('media-codigos').textContent = 
            `${mediaLinhas.toFixed(2)} linhas`;
        
        // Destacar visualmente os códigos
        destacarCodigos(maiorCodigo.id, menorCodigo.id);
    }

    // Função para destacar os códigos na interface
    function destacarCodigos(maiorId, menorId) {
        // Remover destaque anterior
        document.querySelectorAll('.code-section').forEach(section => {
            section.style.border = 'none';
            section.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.1)';
        });

        // Destacar maior código
        const maiorSection = document.querySelector(`.code-section:nth-child(${maiorId})`);
        if (maiorSection) {
            maiorSection.style.border = '3px solid #e74c3c';
            maiorSection.style.boxShadow = '0 6px 12px rgba(231, 76, 60, 0.3)';
        }

        // Destacar menor código
        const menorSection = document.querySelector(`.code-section:nth-child(${menorId})`);
        if (menorSection) {
            menorSection.style.border = '3px solid #2ecc71';
            menorSection.style.boxShadow = '0 6px 12px rgba(46, 204, 113, 0.3)';
        }
    }

    // Executar análise automaticamente ao carregar a página
    analisarCodigos(codigos);
});